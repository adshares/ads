# OS: Ubuntu (Jammy Jellyfish) 22.04
os: linux
dist: jammy

# Project language
language: cpp

cache:
  directories:
  - .autoconf
  - $HOME/.m2
  - $HOME/.cache/pip
  - $HOME/ads/bin

addons:
  apt:
    sources:
      - sourceline: "ppa:ubuntu-toolchain-r/test"
    packages:
      - gcc-11 g++-11 build-essential make cmake
      - openssl libboost-all-dev libssl-dev
  hosts:
      - esc.dock
  sonarcloud:
    organization: "adshares-github"
    token:
      secure: "AcHKRhRrz2XESOGniepK2ug1wvpF917uUxzQ2xH9WAQgZnPBXjtLKMs9++vCQnXtv8m1j13UTKPZERqHCDkljENDWQVNr7Gs1OeAus6qSPhShetp6xZgFCWT1aX8bcKTzqPeK4yfDmEYaBEi63swmA3tbPcpPhmDvczSFMq7tgoBD4B4uiGt0wC41hqZiGfku30RBk3dPP47TJls17PWky5RmXiaE2ICnQzRSH5cBc0bpl9qTEcsbu1rl4So8O1zN+Fs/V4Kbdv/oyjqG34X+3CK4J6IpDDXbmKMkwDjTwpTlg/VMDpWDDaP0df5XlL5CAKC4SD0II17QQb+4BIOP3ZxRK02awYdh1EB26IupmC1l4018c7azYDvnaan3QANuh0YhbGxTHTHFrgvAdIXhU3XtEX0z8LC+CvXrjEpBTjI81aetY/KU9AfabXbns/m/nGf5GjKIXTqnjaEER98ljQ0N62o9hFF4ND6MptmXb4joRnYAYf4BvFaxN9V/IJdUEpAaNfSiEgDcS3XvrcOvoIVHzJkIOfGZNSe+EhQVf+XYv7GfsKRCg5u/UG3bq+5c+misOvGoP0ieWZJhrtXzARm+6yAXMkjCsrNHwNbJKQ1VaRmFojPGIUyQ6iQJ8L0CKF2Z4lPVfLxhCPfZLJwEfui59a+GPMgL0R578gLh/M="

before_install:
  # CONST
  - export TEST_DIR=$HOME/adshares/ads-tests
  - export GENESIS_FILE=$TEST_DIR/qa/config/genesis/genesis-20x20-rf.json
  - export BIN_DIR=$HOME/ads/bin
  - export DATA_DIR=$HOME/.adsd
  - export ADS_DEV=$HOME/adshares/ads-dev-tools
  - export ADS_CONF="$TEST_DIR/scripts/ads_configure --data-dir=$DATA_DIR --interface=127.0.0.1 --genesis $GENESIS_FILE"
  - export ADS_START="$TEST_DIR/scripts/ads_ctl --data-dir=$DATA_DIR --init --wait --debug start"
  - export TESTS_ARGS="-q -f pom-qa.xml -Ddir.data=$DATA_DIR -Dgenesis.file=$GENESIS_FILE"

install:
  # C++14
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 90
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 90
  # QA TESTS
  - git clone https://github.com/adshares/ads-tests.git $TEST_DIR
  # COMMON
  - export PATH="$BIN_DIR:$PATH"

stages:
  - compile
  - test
  - name: quality
    if: branch = master

jobs:
  include:
    - stage: compile
      script:
        - mkdir build
        - $TEST_DIR/scripts/ads_compile -d -o build src
        - mkdir -p $BIN_DIR
        - cp build/esc/ads $BIN_DIR
        - cp build/escd/adsd $BIN_DIR
        - export PATH="$BIN_DIR:$PATH"

    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @transfer"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @status"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @broadcast"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @non_existent,@fee_sharing,@vip_key,@function,@dry_run"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @retrieve_funds"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @account"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @node"

    - stage: quality
      script:
        # compile
        - mkdir build
        - build-wrapper-linux-x86-64 --out-dir bw_output $TEST_DIR/scripts/ads_compile -d -o build -c "-DCODE_COVERAGE=1" src
        - export PATH="build/esc:build/escd:$PATH"
        #Sonar Qube
        - cd $TRAVIS_BUILD_DIR && sonar-scanner

# OS: Ubuntu Focal 20.04
dist: focal

# Project language
language: cpp

# Allows use container-based infrastructure
sudo: required

cache:
  directories:
  - .autoconf
  - $HOME/.m2
  - $HOME/.cache/pip
  - $HOME/ads/bin

addons:
  apt:
    sources:
      - sourceline: "ppa:ubuntu-toolchain-r/test"
    packages:
      - realpath
      - gcc-5 g++-5 build-essential make cmake
      - openssl libboost-all-dev libssl-dev
  hosts:
      - esc.dock
  sonarcloud:
    organization: "adshares-github"
    token:
      secure: "DFgzbLYNJN7cORCbBu0B+iH3Su3J+iy1R6ONKVGMDv7r+OJT6YokgH+j7FEVdDpNhCgdjGnYx0POjfP0FAjDJMmH6KkIi9zsAhJFMF4zez89H5dgLbuubDABC1WMnz+schlg3irNqqZPktF9PousGXCFH/jP94D3pofr1/LXKIYXtnX8vgadHOrWkUyxg/cR7ThBMltmjoYEXkhsOgMgUNS0QH2EFqb8+TScUE47T1hpfNRzRYmOxeLKsDG1Q8eraWtR9VBJNuS/jCrjwEMGURdhs3cVlRx79rnV8vTYhxKKzRPEi05mEaXOgqD7qhWMgef17LAOVVNgQob5fxYAxVZnHIEWP99bmYD6BSbqOuQudYxwmRseR81tGcmGq4dgfsOkyVW/cRLPuVAkw+XOb0Z5EnxqwXfg+1q1XAhugbAHGrl26kYLRxtU8W9Gx5AbQWAujUmI2myJ2Nvw3mrvIpU1QJSYC8HF8VYyjJD98AzfuZziuUBbo51Af8k6HFvqJvZu3jJHurADHoBlBMJMxr3m0zuXfmPZPzxaqjDbmlOBMgxkI3BYjj4qPg9V9X1ABon+Wnt5AJpkH+MKvc8A9j5mrVLrnFuXDpgBUmRmhqq//z73n8Km4Au0M5z4faYFAChbxLdqbSPg60MmxbYtBMjtiUoSImD2vRF+dq3nB+c="
    github_token:
      secure: "occVw21D0BqL4kNwcvirh3Dtdm3P8McXtqsJSrxDWkfmlrxVEJ/BeTglYAEjWq2UOsOxxa8Tbu6MSwdyEUJ6cljakyq2QPlljhHVmxNX0undlXbvQmYJVEhOgLqYkrHj74tSsYoRibFzQ+LRJENtG+Yn6/g/FAejZu7k6kqqF3wsNJZ3uMEkQTIUUxEd7yJ1llIFTr5VgSpOifxBdBQGKdJ8TivFnGpzapwdOsyGWDdjMmf0UKLcZtjz4A17Mj3lcHAOZZ9IHcX2IrRhY0Ahk2nIaRSV9Mdtl2U4lSKi0PICg4tM3sc5mpZFqxHwVpA2Qpo/StrXoYqjy/myxEaFBSao8p1Ujjgh3SOmX2wrt6FHmzx1oMenZm786PJdOnTwLCM6dzWkh7EnTYEeST545i0aek3ptXaiB0005e0SyEKQH8xiW+cu6b3sPrH0Wv+8G6nwMUTNam+dT7Y/ZOPNN87Gs57maQas5so30fjeQuQyMELde+/OlndyHcCrf1ICASqznvMTzp6gyL2aa7XBZwog7Zn3+8kG7+rIfjTM8xx/GCw6bDpRj1h8UjeDRa08Kky9dWhEBcBSAkWXuhd+/HRNyz8XU/5lCkGTxVZ4siI5Khstd60TpJ2TYFPXP1bzAviBmAlPzVwmeOGwObAFpngW3nrpJ2mynuOAPw2wPwc="

before_install:
  # CONST
  - export TEST_DIR=$HOME/adshares/ads-tests
  - export GENESIS_FILE=$TEST_DIR/qa/config/genesis/genesis-20x20-rf.json
  - export BIN_DIR=$HOME/ads/bin
  - export DATA_DIR=$HOME/.adsd
  - export ADS_DEV=$HOME/adshares/ads-dev-tools
  - export ADS_CONF="$TEST_DIR/scripts/ads_configure --data-dir=$DATA_DIR --interface=127.0.0.1 --genesis $GENESIS_FILE"
  - export ADS_START="$TEST_DIR/scripts/ads_ctl --data-dir=$DATA_DIR --init --wait --debug start"
  - export TESTS_ARGS="-q -f pom-qa.xml -Ddir.data=$DATA_DIR -Dgenesis.file=$GENESIS_FILE"

install:
  # C++14
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 90
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
  # QA TESTS
  - git clone https://github.com/adshares/ads-tests.git $TEST_DIR
  # COMMON
  - export PATH="$BIN_DIR:$PATH"

stages:
  - compile
  - test
  - name: quality
    if: branch = master

jobs:
  include:
    - stage: compile
      script:
        - mkdir build
        - $TEST_DIR/scripts/ads_compile -d -o build src
        - mkdir -p $BIN_DIR
        - cp build/esc/ads $BIN_DIR
        - cp build/escd/adsd $BIN_DIR
        - export PATH="$BIN_DIR:$PATH"

    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @transfer"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @status"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @broadcast"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @non_existent,@fee_sharing,@vip_key,@function,@dry_run"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @retrieve_funds"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @account"
    - stage: test
      script:
        - $ADS_CONF && $ADS_START && cd $TEST_DIR
        - mvn clean test $TESTS_ARGS -Dcucumber.options="--tags @node"

    - stage: quality
      script:
        # compile
        - mkdir build
        - build-wrapper-linux-x86-64 --out-dir bw_output $TEST_DIR/scripts/ads_compile -d -o build -c "-DCODE_COVERAGE=1" src
        - export PATH="build/esc:build/escd:$PATH"
        #Sonar Qube
        - cd $TRAVIS_BUILD_DIR && sonar-scanner
